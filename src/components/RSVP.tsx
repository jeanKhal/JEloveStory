import React, { useState, useEffect } from 'react';
import './RSVP.css';
import { findGuest, generateGuestCode, Guest } from '../utils/excelReader';
import { loadGuestListHybrid, findGuestInList } from '../utils/guestData';
import { generateInvitationPDF } from '../utils/pdfGenerator';


const RSVP: React.FC = () => {
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [isChecking, setIsChecking] = useState(false);
  const [guestFound, setGuestFound] = useState<Guest | null>(null);
  const [error, setError] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [invitedGuests, setInvitedGuests] = useState<Guest[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isExcelLoaded, setIsExcelLoaded] = useState(false);


  // Charger automatiquement la liste des invit√©s au montage du composant
  useEffect(() => {
    const loadGuestList = async () => {
      try {
        setIsLoading(true);
        setError('');
        
        // Charger la liste des invit√©s (Excel en local, donn√©es int√©gr√©es en ligne)
        const guests = await loadGuestListHybrid();
        setInvitedGuests(guests);
        setIsExcelLoaded(true);
        console.log(`‚úÖ Liste des invit√©s charg√©e avec succ√®s : ${guests.length} invit√©s trouv√©s`);
      } catch (error) {
        console.error('‚ùå Erreur lors du chargement de la liste des invit√©s:', error);
        setIsExcelLoaded(false);
        setError('La v√©rification des invit√©s n\'est pas disponible. Veuillez nous contacter directement.');
      } finally {
        setIsLoading(false);
      }
    };

    loadGuestList();
  }, []);

  // Fonction pour v√©rifier l'invit√© (insensible √† la casse)
  const checkGuest = () => {
    if (!firstName.trim() || !lastName.trim()) {
      setError('Veuillez remplir tous les champs');
      return;
    }

    if (!isExcelLoaded || invitedGuests.length === 0) {
      setError('La liste des invit√©s n\'est pas encore charg√©e');
      return;
    }

    setIsChecking(true);
    setError('');
    setGuestFound(null);

    // Simulation d'une v√©rification asynchrone
    setTimeout(() => {
      const foundGuest = findGuestInList(firstName, lastName);

      if (foundGuest) {
        setGuestFound(foundGuest);
        setError('');
        console.log(`‚úÖ Invit√© trouv√© : ${foundGuest.firstName} ${foundGuest.lastName}`);
      } else {
        setError('D√©sol√©, votre nom ne figure pas sur notre liste d\'invit√©s. Veuillez contacter les organisateurs.');
        setGuestFound(null);
        console.log(`‚ùå Invit√© non trouv√© : ${firstName} ${lastName}`);
      }
      setIsChecking(false);
    }, 1000);
  };

  // Fonction pour g√©n√©rer et t√©l√©charger l'invitation PDF
  const generateInvitation = async (invitationType: 'benediction' | 'soiree') => {
    if (!guestFound) return;

    setIsGenerating(true);

    try {
      const guestCode = generateGuestCode(guestFound.firstName, guestFound.lastName);
      
      // G√©n√©rer le PDF d'invitation avec le type sp√©cifique
      await generateInvitationPDF({
        firstName: guestFound.firstName,
        lastName: guestFound.lastName,
        guestCode: guestCode,
        invitationType: invitationType
      });
    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration du PDF:', error);
      setError('Erreur lors de la g√©n√©ration de l\'invitation. Veuillez r√©essayer.');
    } finally {
      setIsGenerating(false);
    }
  };

  if (isLoading) {
    return (
      <section id="rsvp" className="rsvp">
        <div className="container">
          <div className="section-header">
            <h2>Confirmer ma pr√©sence</h2>
            <p>Initialisation du syst√®me de v√©rification...</p>
          </div>
          <div className="loading-spinner">
            <div className="spinner"></div>
            <p>V√©rification de la disponibilit√©...</p>
          </div>
        </div>
      </section>
    );
  }

  return (
    <section id="rsvp" className="rsvp">
      <div className="container">
        <div className="section-header">
          <h2>Confirmer ma pr√©sence</h2>
          <p>V√©rifiez votre invitation et confirmez votre pr√©sence</p>
          <div className="rsvp-welcome-text">
            <p>
              Que vous soyez l√† pour danser, rire, pleurer de joie (ou tout √ßa √† la fois), votre pr√©sence est ce qui rendra cette journ√©e encore plus m√©morable.
            </p>
            <p>
              C'est de ce cadre que nous vous prions de bien vouloir confirmer votre pr√©sence √† notre mariage.
            </p>
          </div>
        </div>

        <div className="rsvp-content">
          <div className="rsvp-form">
                          <div className="guest-check-section">
                <h3>üîç V√©rifier mon invitation</h3>
                <p>Entrez votre nom pour v√©rifier votre invitation</p>



                <div className="form-group">
                  <label htmlFor="firstName">Pr√©nom *</label>
                  <input
                    type="text"
                    id="firstName"
                    value={firstName}
                    onChange={(e) => setFirstName(e.target.value)}
                    placeholder="Votre pr√©nom"
                    className={error && !firstName ? 'error' : ''}
                    disabled={!isExcelLoaded}
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="lastName">Nom *</label>
                  <input
                    type="text"
                    id="lastName"
                    value={lastName}
                    onChange={(e) => setLastName(e.target.value)}
                    placeholder="Votre nom"
                    className={error && !lastName ? 'error' : ''}
                    disabled={!isExcelLoaded}
                  />
                </div>

                <button 
                  className="btn btn-primary check-btn"
                  onClick={checkGuest}
                  disabled={isChecking || !isExcelLoaded}
                >
                  {isChecking ? 'V√©rification...' : 'V√©rifier mon invitation'}
                </button>

              {error && (
                <div className="error-message">
                  <span>‚ö†Ô∏è {error}</span>
                  {error.includes('contacter les organisateurs') && (
                    <div className="contact-info">
                      <p><strong>Pour toute question :</strong></p>
                      <p>üìß Email : contact@joel-eunice-wedding.com</p>
                      <p>üì± T√©l√©phone : +243 XXX XXX XXX</p>
                    </div>
                  )}
                </div>
              )}

                             {guestFound && (
                 <div className="guest-found">
                   <div className="success-message">
                     <span>‚úÖ Invitation trouv√©e !</span>
                   </div>
                   
                   <div className="guest-info">
                     <h3>Bienvenue {guestFound.firstName} {guestFound.lastName}</h3>
                     <p>Votre invitation a √©t√© v√©rifi√©e avec succ√®s.</p>
                     
                     {/* Affichage du type d'invitation */}
                     <div className="invitation-type">
                       <h4>Vos invitations :</h4>
                       <div className="invitation-badges">
                         {guestFound.invitationType === 'benediction' && (
                           <span className="badge benediction">‚õ™ B√©n√©diction Nuptiale</span>
                         )}
                         {guestFound.invitationType === 'soiree' && (
                           <span className="badge soiree">üéâ Soir√©e Dansante</span>
                         )}
                         {guestFound.invitationType === 'both' && (
                           <>
                             <span className="badge benediction">‚õ™ B√©n√©diction Nuptiale</span>
                             <span className="badge soiree">üéâ Soir√©e Dansante</span>
                           </>
                         )}
                       </div>
                     </div>
                     
                     <div className="action-buttons">
                       {/* Boutons de t√©l√©chargement selon le type d'invitation */}
                       {guestFound.invitationType === 'benediction' && (
                         <button 
                           className="btn btn-primary"
                           onClick={() => generateInvitation('benediction')}
                           disabled={isGenerating}
                         >
                           {isGenerating ? 'G√©n√©ration...' : '‚õ™ T√©l√©charger invitation B√©n√©diction'}
                         </button>
                       )}
                       
                       {guestFound.invitationType === 'soiree' && (
                         <button 
                           className="btn btn-primary"
                           onClick={() => generateInvitation('soiree')}
                           disabled={isGenerating}
                         >
                           {isGenerating ? 'G√©n√©ration...' : 'üéâ T√©l√©charger invitation Soir√©e'}
                         </button>
                       )}
                       
                       {guestFound.invitationType === 'both' && (
                         <div className="both-invitations">
                           <button 
                             className="btn btn-primary"
                             onClick={() => generateInvitation('benediction')}
                             disabled={isGenerating}
                           >
                             {isGenerating ? 'G√©n√©ration...' : '‚õ™ T√©l√©charger invitation B√©n√©diction'}
                           </button>
                           <button 
                             className="btn btn-primary"
                             onClick={() => generateInvitation('soiree')}
                             disabled={isGenerating}
                           >
                             {isGenerating ? 'G√©n√©ration...' : 'üéâ T√©l√©charger invitation Soir√©e'}
                           </button>
                         </div>
                       )}
                       
                       <button className="btn btn-secondary">
                         ‚úÖ Confirmer ma pr√©sence
                       </button>
                     </div>
                   </div>
                 </div>
               )}
            </div>
          </div>
        </div>

                 {/* Section Lieu */}
         <div className="accommodation-section">
           <div className="section-header">
             <h2>üìç Lieu</h2>
           </div>

          <div className="accommodation-content">
                         {/* Adresse et Itin√©raire */}
                           <div className="venue-simple">
                <h4>üè∞ KEMESHA</h4>
                <p className="venue-address">
                  <strong>üìç Adresse :</strong> KEMESHA, Kinshasa, RDC
                </p>
               <button 
                 className="btn btn-primary venue-directions-btn"
                                   onClick={() => {
                    // Coordonn√©es GPS de KEMESHA
                    const destination = "-4.4419,15.2663";
                    const destinationName = "KEMESHA";
                    
                    // V√©rifier si la g√©olocalisation est support√©e
                    if (navigator.geolocation) {
                      navigator.geolocation.getCurrentPosition(
                        (position) => {
                          const userLat = position.coords.latitude;
                          const userLng = position.coords.longitude;
                          const origin = `${userLat},${userLng}`;
                          
                          // Ouvrir Google Maps avec l'itin√©raire
                          const mapsUrl = `https://www.google.com/maps/dir/${origin}/${destinationName},+Kinshasa,+RDC/@${destination},15z/`;
                          window.open(mapsUrl, '_blank');
                        },
                        (error) => {
                          // Si la g√©olocalisation √©choue, ouvrir juste la destination
                          const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destinationName},+Kinshasa,+RDC`;
                          window.open(mapsUrl, '_blank');
                        }
                      );
                    } else {
                      // Fallback si la g√©olocalisation n'est pas support√©e
                      const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destinationName},+Kinshasa,+RDC`;
                      window.open(mapsUrl, '_blank');
                    }
                  }}
               >
                 üöó Obtenir l'itin√©raire depuis ma position
               </button>
             </div>

                         {/* Logements Recommand√©s */}
                           <div className="recommended-hotels">
                <h3>üè® Logement √† proximit√© recommand√©</h3>
                
                <div className="hotels-intro">
                  <p>Pour vous aider √† organiser votre s√©jour, voici quelques suggestions de logements situ√©s √† proximit√© du lieu de la c√©r√©monie/r√©ception.</p>
                  <p>Ces h√©bergements sont donn√©s √† titre indicatif, et nous vous invitons √† r√©server d√®s que possible, car les disponibilit√©s peuvent varier rapidement.</p>
                </div>

                                 <div className="hotels-list">
                   <h4>Options dans les environs :</h4>
                   <div className="hotels-grid">
                     <div className="hotel-card">
                       <h5>üè® SANAM</h5>
                       <p><strong>üìç Distance :</strong> 2.5 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~8 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "SANAM Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers SANAM
                       </button>
                     </div>
                     
                     <div className="hotel-card">
                       <h5>üè® Sultani H√¥tel</h5>
                       <p><strong>üìç Distance :</strong> 1.8 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~6 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "Sultani H√¥tel Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers Sultani
                       </button>
                     </div>
                     
                     <div className="hotel-card">
                       <h5>üè® Novotel Kinshasa</h5>
                       <p><strong>üìç Distance :</strong> 3.2 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~10 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "Novotel Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers Novotel
                       </button>
                     </div>
                     
                     <div className="hotel-card">
                       <h5>üè® H√¥tel Rotana</h5>
                       <p><strong>üìç Distance :</strong> 2.8 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~9 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "H√¥tel Rotana Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers Rotana
                       </button>
                     </div>
                     
                     <div className="hotel-card">
                       <h5>üè® Hilton Kinshasa</h5>
                       <p><strong>üìç Distance :</strong> 4.1 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~12 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "Hilton Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers Hilton
                       </button>
                     </div>
                     
                     <div className="hotel-card">
                       <h5>üè® Pullman Kinshasa</h5>
                       <p><strong>üìç Distance :</strong> 3.7 km de KEMESHA</p>
                       <p><strong>‚è±Ô∏è Temps :</strong> ~11 minutes en voiture</p>
                       <button 
                         className="btn btn-secondary hotel-directions-btn"
                         onClick={() => {
                           const destination = "Pullman Kinshasa";
                           const mapsUrl = `https://www.google.com/maps/search/?api=1&query=${destination}`;
                           window.open(mapsUrl, '_blank');
                         }}
                       >
                         üöó Itin√©raire vers Pullman
                       </button>
                     </div>
                   </div>
                 </div>

                <div className="hotels-contact">
                  <p>Si vous avez besoin d'un petit coup de main pour trouver un logement ou poser une question, contactez-nous directement. Nous serons ravis de vous aider !</p>
                </div>
              </div>

            

            
           
            
          </div>
                 </div>


       </div>
     </section>
   );
 };

export default RSVP; 